@using System.Linq.Expressions
@inherits InputBase<string>

<div class="form-group my-4">
    @if (!string.IsNullOrWhiteSpace(Label))
    {
        <label for="@Id">@Label</label>
    }
    @if(!ReadOnly)
    {
        <input class="form-control @CssClass" id="@Id" @bind="@CurrentValue" />
    }
    else
    {
        <input class="form-control @CssClass" id="@Id" @bind="@CurrentValue" disabled />
    }
    
    <div class="form-control-validation">
        <ValidationMessage For="@ValidationFor" />
    </div>
</div>

@code {
    [Parameter] public string Id { get; set; }
    [Parameter] public string Label { get; set; }
    [Parameter] public bool ReadOnly { get; set; } = false;
    [Parameter] public Expression<Func<string>> ValidationFor { get; set; }

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}
